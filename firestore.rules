rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      match /cart/{cartItemId} {
        allow read, create, update, delete: if request.auth != null && request.auth.uid == userId;
      }

      match /orders/{orderId} {
        allow create: if request.auth != null &&
          (exists(/databases/$(database)/documents/customer/$(request.auth.uid)) ||
           exists(/databases/$(database)/documents/fisherman/$(request.auth.uid)));
        allow read: if request.auth != null && (
          request.auth.uid == userId ||
          (resource.data.sellerId != null && request.auth.uid == resource.data.sellerId)
        );
        // Allow the buyer or seller to update the status field only
        allow update: if request.auth != null &&
          (
            request.auth.uid == userId ||
            (resource.data.sellerId != null && request.auth.uid == resource.data.sellerId)
          ) &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status']) &&
          request.resource.data.status in ['Cancelled', 'Pending', 'Completed', 'Accepted', 'Ready to Deliver'];
      }

      match /seller_orders/{orderId} {
        allow create: if request.auth != null && request.auth.uid == userId;
        allow read: if request.auth != null && request.auth.uid == userId;
        allow update: if request.auth != null && request.auth.uid == userId &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status']) &&
          request.resource.data.status in ['Cancelled', 'Pending', 'Completed', 'Accepted', 'Ready to Deliver'];
      }
    }

    match /customer/{userId} {
  allow read: if request.auth != null;
  allow write: if request.auth != null && request.auth.uid == userId;
}

    match /fisherman/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    match /products/{productId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null &&
        exists(/databases/$(database)/documents/fisherman/$(request.auth.uid)) &&
        request.resource.data.sellerId == request.auth.uid;
      allow update, delete: if request.auth != null &&
        resource.data.sellerId == request.auth.uid;
    }

    match /notifications/{notificationId} {
  allow create: if request.auth != null;
  allow read: if request.auth != null &&
    (request.auth.uid == resource.data.userId ||
     request.auth.uid == resource.data.sellerId);
  allow update: if request.auth != null &&
    request.auth.uid == resource.data.userId &&
    request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isRead']);
  allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
}

    match /files/{fileId} {
      allow read, create, update, delete: if request.auth != null;
    }

    match /videos/{videoId} {
      allow read, create, update, delete: if request.auth != null;
    }

    match /profile/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
      match /profile_pictures/{picId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
    }

    match /sellers_notification/{notificationId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId ||
         request.auth.uid == resource.data.sellerId);
      allow update: if request.auth != null &&
        request.auth.uid == resource.data.sellerId &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isRead']);
      allow delete: if request.auth != null && request.auth.uid == resource.data.sellerId;
    }
    
    match /messages/{chatId} {
      allow read, write, create, update, delete: if request.auth != null;
      match /chats/{messageId} {
        allow read, write, create, update, delete: if request.auth != null;
      }
    }
    
    match /{document=**} {
      allow read, write: if false;
    }
  }
}